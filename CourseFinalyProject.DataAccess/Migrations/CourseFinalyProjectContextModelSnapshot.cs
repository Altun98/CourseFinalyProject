// <auto-generated />
using System;
using CourseFinalyProject.DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseFinalyProject.DataAccess.Migrations
{
    [DbContext(typeof(CourseFinalyProjectContext))]
    partial class CourseFinalyProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOpertaionClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOpertaionClaims");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.AcademicDegree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrancName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DiplomaDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiplomaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inventions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpDocId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpDocId");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Attestations");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.BloodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BloodTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BloodTypes");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.CombatOperations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Injury")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Territory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VeteranCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VeteranCardStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("CombatOperations");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Conscriptio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartamentID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MilitaryOathTakingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.ToTable("Conscriptio");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartamentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DiscountedService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Coefficent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MilitaryServisID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryServisID")
                        .IsUnique();

                    b.ToTable("DiscountedServices");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDocumentId");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DodtGoAbroad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpDocId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBusinnessTrip")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpDocId");

                    b.HasIndex("EmployeeID");

                    b.ToTable("DodtGoAbroads");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DiplomaDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiplomaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationTypeID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ipecialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMilitary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EducationTypeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.EducationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationTypes");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.EmployeeDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DocDade")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeID")
                        .HasColumnType("int");

                    b.Property<int>("GiveID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeDocuments");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BloodID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdentityCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BloodID")
                        .IsUnique();

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeInfo");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.ExtenstionOFServiceLife", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpDocID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpDocID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ExtenstionOFServiceLives");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.FrutherEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DiplomaDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiplomaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCourse")
                        .HasColumnType("bit");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("FrutherEducations");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Give", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("GiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDocumentId");

                    b.ToTable("Gives");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.LaborActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Duty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("LaborActivity");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.MilitaryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departament")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpDocID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpDocID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("MilitaryServices");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.AcademicDegree", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("AcademicDegrees")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Attestation", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("Attestations")
                        .HasForeignKey("EmpDocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("Attestations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.CombatOperations", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("CombatOperations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Conscriptio", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.Departament", "Departament")
                        .WithMany()
                        .HasForeignKey("DepartamentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithOne("Conscriptio")
                        .HasForeignKey("CourseFinalyProject.Entities.Concrete.Conscriptio", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DiscountedService", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.MilitaryService", "MilitaryService")
                        .WithOne("DiscountedService")
                        .HasForeignKey("CourseFinalyProject.Entities.Concrete.DiscountedService", "MilitaryServisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MilitaryService");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DocumentType", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("EmployeeDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.DodtGoAbroad", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("dodtGoAbroads")
                        .HasForeignKey("EmpDocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("DodtGoAbroads")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Education", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EducationType", "EducationType")
                        .WithMany()
                        .HasForeignKey("EducationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("Educations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.EmployeeInfo", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.BloodType", "BloodType")
                        .WithOne("EmployeeInfo")
                        .HasForeignKey("CourseFinalyProject.Entities.Concrete.EmployeeInfo", "BloodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BloodType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.ExtenstionOFServiceLife", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("ExtenstionOFServiceLives")
                        .HasForeignKey("EmpDocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("ExtenstionOFServiceLives")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.FrutherEducation", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("FrutherEducations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Give", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("Gives")
                        .HasForeignKey("EmployeeDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.LaborActivity", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", null)
                        .WithMany("laborActivities")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.MilitaryService", b =>
                {
                    b.HasOne("CourseFinalyProject.Entities.Concrete.EmployeeDocument", "EmployeeDocument")
                        .WithMany("MilitaryServices")
                        .HasForeignKey("EmpDocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseFinalyProject.Entities.Concrete.Employee", "Employee")
                        .WithMany("MilitaryServices")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeDocument");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.BloodType", b =>
                {
                    b.Navigation("EmployeeInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.Employee", b =>
                {
                    b.Navigation("AcademicDegrees");

                    b.Navigation("Attestations");

                    b.Navigation("CombatOperations");

                    b.Navigation("Conscriptio")
                        .IsRequired();

                    b.Navigation("DodtGoAbroads");

                    b.Navigation("Educations");

                    b.Navigation("ExtenstionOFServiceLives");

                    b.Navigation("FrutherEducations");

                    b.Navigation("MilitaryServices");

                    b.Navigation("laborActivities");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.EmployeeDocument", b =>
                {
                    b.Navigation("Attestations");

                    b.Navigation("DocumentTypes");

                    b.Navigation("ExtenstionOFServiceLives");

                    b.Navigation("Gives");

                    b.Navigation("MilitaryServices");

                    b.Navigation("dodtGoAbroads");
                });

            modelBuilder.Entity("CourseFinalyProject.Entities.Concrete.MilitaryService", b =>
                {
                    b.Navigation("DiscountedService")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
